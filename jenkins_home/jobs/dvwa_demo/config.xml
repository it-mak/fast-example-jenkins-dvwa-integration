<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.5">
      <projectUrl>https://github.com/wallarm/fast-example-jenkins-dvwa-integration.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.PasswordParameterDefinition>
          <name>WALLARM_API_TOKEN</name>
          <description>Your wallarm node token used to run tests. Create nodes and get their tokens here: https://my.wallarm.com/nodes </description>
          <defaultValue>{AQAAABAAAAAQcytq2OY9Q4PM1Mca2PBsRHnqbnV3GhS9RvEj4S3uuMU=}</defaultValue>
        </hudson.model.PasswordParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.12.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/wallarm/fast-example-jenkins-dvwa-integration.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>sudo -E docker-compose build &amp;&amp; \
sudo -E docker-compose up -d dvwa fast selenium &amp;&amp; \
sudo -E docker-compose run test &amp;&amp; \
sudo -E docker-compose run --rm -e CI_MODE=testing -e TEST_RUN_URI=http://dvwa:80 fast
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.9.0">
      <config>
        <scriptFiles/>
        <groovyScripts/>
        <buildSteps>
          <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
            <results>
              <string>FAILURE</string>
            </results>
            <role>BOTH</role>
            <executeOn>BOTH</executeOn>
            <buildSteps>
              <hudson.tasks.Shell>
                <command>sudo -E docker-compose down --remove-orphans</command>
              </hudson.tasks.Shell>
            </buildSteps>
          </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
          <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
            <results>
              <string>ABORTED</string>
            </results>
            <role>BOTH</role>
            <executeOn>BOTH</executeOn>
            <buildSteps>
              <hudson.tasks.Shell>
                <command>sudo -E docker-compose down --remove-orphans</command>
              </hudson.tasks.Shell>
            </buildSteps>
          </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
          <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
            <results>
              <string>SUCCESS</string>
            </results>
            <role>BOTH</role>
            <executeOn>BOTH</executeOn>
            <buildSteps>
              <hudson.tasks.Shell>
                <command>sudo -E docker-compose down --remove-orphans</command>
              </hudson.tasks.Shell>
            </buildSteps>
          </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
        </buildSteps>
        <markBuildUnstable>false</markBuildUnstable>
      </config>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
  </publishers>
  <buildWrappers/>
</project>